[{"data":1,"prerenderedAt":417},["Reactive",2],{"content-query-aL7TI37yFL":3,"tags":399},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"_empty":7,"title":9,"description":10,"img":11,"tags":12,"createdAt":17,"updatedAt":18,"body":19,"_type":394,"_id":395,"_source":396,"_file":397,"_extension":398},"/blog/toute-la-puissance-d-un-pam-avec-boundary","blog",false,"","Explorez l'intégration puissante d'un Pam avec HashiCorp Boundary.","Guide sur l'utilisation de HashiCorp Boundary avec Terraform sur AWS.","/boundary.png",[13,14,15,16],"Security","pam","cloud","Infrastructure-as-code","2022-10-04T00:00:00.000Z",null,{"type":20,"children":21,"toc":382},"root",[22,30,37,42,62,68,81,97,109,120,132,138,148,160,179,185,195,207,222,228,240,250,262,274,280,291,303,332,338,356,361,367,372,377],{"type":23,"tag":24,"props":25,"children":26},"element","p",{},[27],{"type":28,"value":29},"text","HashiCorp Boundary est une puissante solution pour gérer l'accès aux systèmes en fonction des identités des utilisateurs. Dans ce guide, nous vous expliquerons comment configurer et intégrer HashiCorp Boundary avec Terraform sur AWS. À la fin de ce tutoriel, vous disposerez d'un déploiement Boundary fonctionnel sur AWS.",{"type":23,"tag":31,"props":32,"children":34},"h3",{"id":33},"prérequis",[35],{"type":28,"value":36},"Prérequis",{"type":23,"tag":24,"props":38,"children":39},{},[40],{"type":28,"value":41},"Avant de commencer, assurez-vous de disposer des éléments suivants :",{"type":23,"tag":43,"props":44,"children":45},"ul",{},[46,52,57],{"type":23,"tag":47,"props":48,"children":49},"li",{},[50],{"type":28,"value":51},"Des identifiants de compte AWS",{"type":23,"tag":47,"props":53,"children":54},{},[55],{"type":28,"value":56},"Terraform installé sur votre machine",{"type":23,"tag":47,"props":58,"children":59},{},[60],{"type":28,"value":61},"Une connaissance de base des services et concepts AWS",{"type":23,"tag":31,"props":63,"children":65},{"id":64},"étape-1-mise-en-place-de-linfrastructure",[66],{"type":28,"value":67},"Étape 1 : Mise en place de l'infrastructure",{"type":23,"tag":24,"props":69,"children":70},{},[71,73,79],{"type":28,"value":72},"Pour créer l'infrastructure nécessaire sur AWS, nous utiliserons Terraform. Commencez par créer un nouveau répertoire pour vos fichiers Terraform et créez un fichier nommé ",{"type":23,"tag":74,"props":75,"children":76},"code-inline",{},[77],{"type":28,"value":78},"main.tf",{"type":28,"value":80},". Ouvrez ce fichier dans votre éditeur de texte préféré et configurez le fournisseur AWS :",{"type":23,"tag":82,"props":83,"children":88},"code",{"className":84,"code":86,"language":87,"meta":8},[85],"language-hcl","provider \"aws\" {\n  region = \"us-west-2\" # Remplacez par votre région AWS souhaitée\n}\n","hcl",[89],{"type":23,"tag":90,"props":91,"children":92},"pre",{},[93],{"type":23,"tag":82,"props":94,"children":95},{"__ignoreMap":8},[96],{"type":28,"value":86},{"type":23,"tag":24,"props":98,"children":99},{},[100,102,107],{"type":28,"value":101},"Enregistrez le fichier et exécutez ",{"type":23,"tag":74,"props":103,"children":104},{},[105],{"type":28,"value":106},"terraform init",{"type":28,"value":108}," pour initialiser votre projet Terraform.",{"type":23,"tag":24,"props":110,"children":111},{},[112,114,118],{"type":28,"value":113},"Ensuite, créez un groupe de sécurité AWS pour permettre le trafic entrant vers le contrôleur Boundary et les instances de travail. Ajoutez le code suivant à ",{"type":23,"tag":74,"props":115,"children":116},{},[117],{"type":28,"value":78},{"type":28,"value":119}," :",{"type":23,"tag":82,"props":121,"children":124},{"className":122,"code":123,"language":87,"meta":8},[85],"resource \"aws_security_group\" \"boundary\" {\n  name = \"boundary_sg\"\n\n  ingress {\n    from_port   = 22\n    to_port     = 22\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  ingress {\n    from_port   = 9200\n    to_port     = 9200\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n}\n",[125],{"type":23,"tag":90,"props":126,"children":127},{},[128],{"type":23,"tag":82,"props":129,"children":130},{"__ignoreMap":8},[131],{"type":28,"value":123},{"type":23,"tag":31,"props":133,"children":135},{"id":134},"étape-2-provisionner-le-contrôleur-boundary",[136],{"type":28,"value":137},"Étape 2: Provisionner le contrôleur Boundary",{"type":23,"tag":24,"props":139,"children":140},{},[141,143,147],{"type":28,"value":142},"Il est maintenant temps de provisionner l'instance du contrôleur Boundary. Ajoutez le code suivant à ",{"type":23,"tag":74,"props":144,"children":145},{},[146],{"type":28,"value":78},{"type":28,"value":119},{"type":23,"tag":82,"props":149,"children":152},{"className":150,"code":151,"language":87,"meta":8},[85],"resource \"aws_instance\" \"boundary_controller\" {\n  ami           = \"ami-0c55b159cbfafe1f0\" # Remplacez par l'ID AMI AWS souhaité\n  instance_type = \"t2.micro\"\n  key_name      = \"votre-paire-de-clés-ssh\" # Remplacez par le nom de votre paire de clés SSH\n  security_group_ids = [aws_security_group.boundary.id]\n\n  tags = {\n    Name = \"boundary-controller\"\n  }\n}\n",[153],{"type":23,"tag":90,"props":154,"children":155},{},[156],{"type":23,"tag":82,"props":157,"children":158},{"__ignoreMap":8},[159],{"type":28,"value":151},{"type":23,"tag":24,"props":161,"children":162},{},[163,165,170,172,177],{"type":28,"value":164},"N'oubliez pas de remplacer les valeurs ",{"type":23,"tag":74,"props":166,"children":167},{},[168],{"type":28,"value":169},"ami",{"type":28,"value":171}," et ",{"type":23,"tag":74,"props":173,"children":174},{},[175],{"type":28,"value":176},"key_name",{"type":28,"value":178}," par les vôtres.",{"type":23,"tag":31,"props":180,"children":182},{"id":181},"étape-3-provisionner-le-worker-boundary",[183],{"type":28,"value":184},"Étape 3: Provisionner le worker Boundary",{"type":23,"tag":24,"props":186,"children":187},{},[188,190,194],{"type":28,"value":189},"Ensuite, provisionnons l'instance du worker Boundary. Ajoutez le code suivant à ",{"type":23,"tag":74,"props":191,"children":192},{},[193],{"type":28,"value":78},{"type":28,"value":119},{"type":23,"tag":82,"props":196,"children":199},{"className":197,"code":198,"language":87,"meta":8},[85],"resource \"aws_instance\" \"boundary_worker\" {\n  ami           = \"ami-0c55b159cbfafe1f0\" # Remplacez par l'ID AMI AWS souhaité\n  instance_type = \"t2.micro\"\n  key_name      = \"votre-paire-de-clés-ssh\" # Remplacez par le nom de votre paire de clés SSH\n  security_group_ids = [aws_security_group.boundary.id]\n\n  tags = {\n    Name = \"boundary-worker\"\n  }\n}\n",[200],{"type":23,"tag":90,"props":201,"children":202},{},[203],{"type":23,"tag":82,"props":204,"children":205},{"__ignoreMap":8},[206],{"type":28,"value":198},{"type":23,"tag":24,"props":208,"children":209},{},[210,212,216,217,221],{"type":28,"value":211},"Encore une fois, n'oubliez pas de remplacer les valeurs ",{"type":23,"tag":74,"props":213,"children":214},{},[215],{"type":28,"value":169},{"type":28,"value":171},{"type":23,"tag":74,"props":218,"children":219},{},[220],{"type":28,"value":176},{"type":28,"value":178},{"type":23,"tag":31,"props":223,"children":225},{"id":224},"étape-4-configuration-de-boundary",[226],{"type":28,"value":227},"Étape 4: Configuration de Boundary",{"type":23,"tag":24,"props":229,"children":230},{},[231,233,238],{"type":28,"value":232},"Maintenant que nos instances sont provisionnées, nous devons configurer le contrôleur et le worker Boundary. Nous utiliserons le provisionneur ",{"type":23,"tag":74,"props":234,"children":235},{},[236],{"type":28,"value":237},"remote-exec",{"type":28,"value":239}," de Terraform pour exécuter des commandes sur les instances.",{"type":23,"tag":24,"props":241,"children":242},{},[243,245,249],{"type":28,"value":244},"Ajoutez le code suivant à ",{"type":23,"tag":74,"props":246,"children":247},{},[248],{"type":28,"value":78},{"type":28,"value":119},{"type":23,"tag":82,"props":251,"children":254},{"className":252,"code":253,"language":87,"meta":8},[85],"provisioner \"remote-exec\" {\n  connection {\n    type        = \"ssh\"\n    user        = \"ec2-user\"\n    private_key = file(\"~/chemin-vers-votre/cle-privee.pem\") # Remplacez par le chemin vers votre clé privée SSH\n    host        = aws_instance.boundary_controller.public_ip\n  }\n\n  inline = [\n    \"sudo echo 'deb http://pkg.boundaryproject.io/apt/ any-arch main' | sudo tee /etc/apt/sources.list.d\n/boundary.list\",\n    \"curl -sS https://pkg.boundaryproject.io/apt/key.gpg | sudo apt-key add -\",\n    \"sudo apt-get update\",\n    \"sudo apt-get -y install boundary-controller\"\n  ]\n}\n\nprovisioner \"remote-exec\" {\n  connection {\n    type        = \"ssh\"\n    user        = \"ec2-user\"\n    private_key = file(\"~/chemin-vers-votre/cle-privee.pem\") # Remplacez par le chemin vers votre clé privée SSH\n    host        = aws_instance.boundary_worker.public_ip\n  }\n\n  inline = [\n    \"sudo echo 'deb http://pkg.boundaryproject.io/apt/ any-arch main' | sudo tee /etc/apt/sources.list.d/boundary.list\",\n    \"curl -sS https://pkg.boundaryproject.io/apt/key.gpg | sudo apt-key add -\",\n    \"sudo apt-get update\",\n    \"sudo apt-get -y install boundary-worker\"\n  ]\n}\n",[255],{"type":23,"tag":90,"props":256,"children":257},{},[258],{"type":23,"tag":82,"props":259,"children":260},{"__ignoreMap":8},[261],{"type":28,"value":253},{"type":23,"tag":24,"props":263,"children":264},{},[265,267,272],{"type":28,"value":266},"Assurez-vous de remplacer la valeur ",{"type":23,"tag":74,"props":268,"children":269},{},[270],{"type":28,"value":271},"private_key",{"type":28,"value":273}," par le chemin de votre clé privée SSH.",{"type":23,"tag":31,"props":275,"children":277},{"id":276},"étape-5-finalisation-et-nettoyage",[278],{"type":28,"value":279},"Étape 5: Finalisation et nettoyage",{"type":23,"tag":24,"props":281,"children":282},{},[283,285,289],{"type":28,"value":284},"Enfin, ajoutez le code suivant à ",{"type":23,"tag":74,"props":286,"children":287},{},[288],{"type":28,"value":78},{"type":28,"value":290}," pour nettoyer les ressources lorsque vous n'en avez plus besoin :",{"type":23,"tag":82,"props":292,"children":295},{"className":293,"code":294,"language":87,"meta":8},[85],"resource \"aws_key_pair\" \"example\" {\n  key_name   = \"votre-paire-de-clés-ssh\" # Remplacez par le nom souhaité de votre paire de clés SSH\n  public_key = file(\"~/chemin-vers-votre/cle-publique.pub\") # Remplacez par le chemin vers votre clé publique SSH\n}\n\nresource \"aws_eip\" \"nat\" {\n  instance = aws_instance.boundary_controller.id # ou aws_instance.boundary_worker.id, selon votre configuration\n  vpc      = true\n}\n\nresource \"null_resource\" \"ansible\" {\n  provisioner \"local-exec\" {\n    command = \"ansible-playbook -i ${aws_eip.nat.public_ip}, -u ec2-user --private-key ~/chemin-vers-votre/cle-privee.pem provision.yml\" # Remplacez par le chemin de votre playbook Ansible\n  }\n\n  depends_on = [\n    aws_instance.boundary_controller,\n    aws_instance.boundary_worker\n  ]\n}\n\n// Ajoutez le code suivant si vous voulez détruire automatiquement les ressources\nlifecycle {\n    prevent_destroy = true // Commentez ou supprimez cette ligne pour permettre la destruction des ressources\n}\n",[296],{"type":23,"tag":90,"props":297,"children":298},{},[299],{"type":23,"tag":82,"props":300,"children":301},{"__ignoreMap":8},[302],{"type":28,"value":294},{"type":23,"tag":24,"props":304,"children":305},{},[306,308,312,314,319,320,324,325,330],{"type":28,"value":307},"Assurez-vous de remplacer les valeurs ",{"type":23,"tag":74,"props":309,"children":310},{},[311],{"type":28,"value":176},{"type":28,"value":313},", ",{"type":23,"tag":74,"props":315,"children":316},{},[317],{"type":28,"value":318},"public_key",{"type":28,"value":313},{"type":23,"tag":74,"props":321,"children":322},{},[323],{"type":28,"value":271},{"type":28,"value":313},{"type":23,"tag":74,"props":326,"children":327},{},[328],{"type":28,"value":329},"command",{"type":28,"value":331}," et autres valeurs pertinentes par vos propres valeurs.",{"type":23,"tag":31,"props":333,"children":335},{"id":334},"étape-6-déployez-et-exécutez-terraform",[336],{"type":28,"value":337},"Étape 6: Déployez et exécutez Terraform",{"type":23,"tag":24,"props":339,"children":340},{},[341,343,347,349,354],{"type":28,"value":342},"Enregistrez le fichier ",{"type":23,"tag":74,"props":344,"children":345},{},[346],{"type":28,"value":78},{"type":28,"value":348}," et, dans votre répertoire Terraform, exécutez ",{"type":23,"tag":74,"props":350,"children":351},{},[352],{"type":28,"value":353},"terraform apply",{"type":28,"value":355}," pour créer l'infrastructure et provisionner les instances Boundary.",{"type":23,"tag":24,"props":357,"children":358},{},[359],{"type":28,"value":360},"Une fois le déploiement Terraform terminé, vous disposerez d'un déploiement Boundary entièrement fonctionnel sur AWS. Vous pouvez accéder aux instances du contrôleur et du worker Boundary à l'aide des adresses IP publiques affichées dans la sortie Terraform.",{"type":23,"tag":31,"props":362,"children":364},{"id":363},"conclusion",[365],{"type":28,"value":366},"Conclusion",{"type":23,"tag":24,"props":368,"children":369},{},[370],{"type":28,"value":371},"Dans ce tutoriel, nous avons expliqué comment configurer HashiCorp Boundary sur AWS à l'aide de Terraform. Nous avons provisionné l'infrastructure, configuré le contrôleur et le worker Boundary, et créé les ressources AWS nécessaires. En suivant ce guide, vous disposez désormais d'une base solide pour gérer l'accès à vos systèmes à l'aide de HashiCorp Boundary.",{"type":23,"tag":24,"props":373,"children":374},{},[375],{"type":28,"value":376},"N'oubliez pas de gérer et sécuriser votre déploiement Boundary en suivant les bonnes pratiques, telles que l'utilisation de credentials sécurisés et la mise à jour régulière de votre système.",{"type":23,"tag":24,"props":378,"children":379},{},[380],{"type":28,"value":381},"Bonne utilisation de Boundary !",{"title":8,"searchDepth":383,"depth":383,"links":384},2,[385,387,388,389,390,391,392,393],{"id":33,"depth":386,"text":36},3,{"id":64,"depth":386,"text":67},{"id":134,"depth":386,"text":137},{"id":181,"depth":386,"text":184},{"id":224,"depth":386,"text":227},{"id":276,"depth":386,"text":279},{"id":334,"depth":386,"text":337},{"id":363,"depth":386,"text":366},"markdown","content:blog:toute-la-puissance-d-un-pam-avec-boundary.md","content","blog/toute-la-puissance-d-un-pam-avec-boundary.md","md",[400,405,410,413,415],{"tags":401},[13,402,403,404],"Terraform","Azure","ChatGPT",{"tags":406},[407,408,409],"Infrastructure-as-Code","Ansible","Dev",{"tags":411},[13,412,404],"Soar",{"tags":414},[407,402,409],{"tags":416},[13,14,15,16],1688984668892]